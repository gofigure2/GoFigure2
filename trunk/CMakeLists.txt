PROJECT( QGOFIGURE )

CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(VERSION 2.4)
  CMAKE_POLICY(SET CMP0005 OLD)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

# On Visual Studio 8 MS deprecated C. This removes all 1.276E1265 security
# warnings. Copied from ITK CMakeLists.
IF(WIN32)
  IF(NOT BORLAND)
    IF(NOT CYGWIN)
      IF(NOT MINGW)
          ADD_DEFINITIONS(
            -D_CRT_FAR_MAPPINGS_NO_DEPRECATE
            -D_CRT_IS_WCTYPE_NO_DEPRECATE
            -D_CRT_MANAGED_FP_NO_DEPRECATE
            -D_CRT_NONSTDC_NO_DEPRECATE
            -D_CRT_SECURE_NO_DEPRECATE
            -D_CRT_SECURE_NO_DEPRECATE_GLOBALS
            -D_CRT_SETERRORMODE_BEEP_SLEEP_NO_DEPRECATE
            -D_CRT_TIME_FUNCTIONS_NO_DEPRECATE
            -D_CRT_VCCLRIT_NO_DEPRECATE
            -D_SCL_SECURE_NO_DEPRECATE
            )
      ENDIF(NOT MINGW)
    ENDIF(NOT CYGWIN)
  ENDIF(NOT BORLAND)
ENDIF(WIN32)

############################
FIND_PACKAGE( VTK )
IF( VTK_FOUND )
  INCLUDE( ${VTK_USE_FILE} )

  IF( VTK_BUILD_SHARED_LIBS )
    SET(LIBS_STYLE "SHARED")
  ELSE( VTK_BUILD_SHARED_LIBS )
    SET(LIBS_STYLE "STATIC")
  ENDIF( VTK_BUILD_SHARED_LIBS )

  ############################
  FIND_PACKAGE( ITK )
  IF( ITK_FOUND )
    INCLUDE( ${ITK_USE_FILE} )
  ENDIF( ITK_FOUND )

  ############################
  # use what QVTK built with
  SET(QT_QMAKE_EXECUTABLE ${VTK_QT_QMAKE_EXECUTABLE} CACHE FILEPATH "")
  SET(QT_MOC_EXECUTABLE ${VTK_QT_MOC_EXECUTABLE} CACHE FILEPATH "")
  SET(QT_UIC_EXECUTABLE ${VTK_QT_UIC_EXECUTABLE} CACHE FILEPATH "")

  FIND_PACKAGE(Qt4 REQUIRED)

  IF(QT_USE_FILE)
    SET(QT_USE_QT3SUPPORT TRUE)
    INCLUDE(${QT_USE_FILE})
  ELSE(QT_USE_FILE)
    SET(QT_LIBRARIES   ${QT_QT_LIBRARY})
  ENDIF(QT_USE_FILE)

  INCLUDE_DIRECTORIES( ${QT_INCLUDES}
    ${QGOFIGURE_SOURCE_DIR}
    ${QGOFIGURE_BINARY_DIR}
    ${QGOFIGURE_SOURCE_DIR}/MegaVTK/vtkItk
    ${QGOFIGURE_SOURCE_DIR}/MegaVTK/qt
    ${QGOFIGURE_SOURCE_DIR}/MegaVTK/vtkRenderingAddOn
    ${QGOFIGURE_SOURCE_DIR}/MegaVTK/vtkVisuManagement
    )

  SET( QGOMAINWINDOW_HDRS QGoMainWindow.h itkQtAdaptor.h)
  SET( QGOMAINWINDOW_SRC QGoMainWindow.cxx )

  QT4_WRAP_UI( QGOMAINWINDOW_UI_HDRS go.ui )
  QT4_WRAP_CPP( QGOMAINWINDOW_MOC_SRC ${QGOMAINWINDOW_HDRS} )
  QT4_ADD_RESOURCES( QGOMAINWINDOW_QRC ${QGOFIGURE_SOURCE_DIR}/resources/axes.qrc)


  SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_SRC} PROPERTIES
                            OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )
  SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_MOC_SRC} PROPERTIES
                            OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )

  SET( QICONLOADER_SRC qticonloader.cxx )

  SUBDIRS( MegaVTK )

  ADD_EXECUTABLE( gofigure
    #MACOSX_BUNDLE
    gofigure.cxx
    itkQtProgressBar.cxx
    vtkLSMReader.cxx
    ${QGOMAINWINDOW_SRC}  
    ${QGOMAINWINDOW_MOC_SRC}
    ${QICONLOADER_SRC}
    ${QGOMAINWINDOW_QRC} )

  TARGET_LINK_LIBRARIES( gofigure
    ${QT_LIBRARIES}
    QVTK
    ITKCommon
    ITKIO
    ITKBasicFilters
    ITKNumerics
    vtkImaging
    QMegaVTKAddOn
    vtkVisuManagement
    )

  ADD_TEST( gofigure_TEST ${CXX_TEST_PATH}/gofigure )
ENDIF( VTK_FOUND )


