# Avoid following symlinks encountered during FILE GLOB_RECURSE calls:
#
IF( COMMAND CMAKE_POLICY )
  CMAKE_POLICY( SET CMP0009 NEW )
ENDIF( COMMAND CMAKE_POLICY )

IF( COMMAND CMAKE_POLICY )
  CMAKE_POLICY( SET CMP0011 NEW )
ENDIF( COMMAND CMAKE_POLICY )

# gp_item_default_embedded_path item default_embedded_path_var
#
# Return the path that others should refer to the item by when the item
# is embedded inside a bundle.
#
# Override on a per-project basis by providing a project-specific
# gp_item_default_embedded_path_override function.
#
FUNCTION( gp_item_default_embedded_path_override item default_embedded_path_var )
  #
  # The assumption here is that all executables in the bundle will be
  # in same-level-directories inside the bundle. The parent directory
  # of an executable inside the bundle should be MacOS or a sibling of
  # MacOS and all embedded paths returned from here will begin with
  # "@loader_path/../" and will work from all executables in all
  # such same-level-directories inside the bundle.
  #

  # By default, embed things right next to the main bundle executable:
  #
  SET( install_name_prefix "@executable_path" )
  # -------------------------------------------------------------------
  # If your application uses plugins then you should consider using the 
  # following instead but will limit your deployment to OS X 10.4. 
  # There is also a patch needed for CMake that as of Sept 30, 2008 has 
  # NOT been applied to CMake.
  #  set (install_name_prefix "@loader_path")
  
  SET( path "${install_name_prefix}/../../Contents/MacOS" )

  SET( overridden 0 )

  # Embed .dylibs in the Libraries Directory
  #
  IF( item MATCHES "\\.dylib$" )
    SET( path "${install_name_prefix}/../Libraries" )
    SET( overridden 1 ) 
  ENDIF( item MATCHES "\\.dylib$" )

  # Embed .so files in the Plugins directory
  #
  IF( item MATCHES "\\.so$" )
    SET( path "${install_name_prefix}/../Plugins" )
    SET( overridden 1 )
  ENDIF( item MATCHES "\\.so$" )
  
  # Embed frameworks in the embedded "Frameworks" directory (sibling of 
  # MacOS):
  #
  IF( NOT overridden )
    IF( item MATCHES "[^/]+\\.framework/" )
      SET( path "${install_name_prefix}/../Frameworks" )
      SET( overridden 1 )
    ENDIF( item MATCHES "[^/]+\\.framework/" )
  ENDIF( NOT overridden )

  SET( ${default_embedded_path_var} "${path}" PARENT_SCOPE )
ENDFUNCTION( gp_item_default_embedded_path_override )

# -- Copy the App bundle to the installation location first
EXECUTE_PROCESS( COMMAND "@OSX_MAKE_STANDALONE_BUNDLE_BASH_SCRIPT@" )

# -- Run the BundleUtilities cmake code
INCLUDE( BundleUtilities )

fixup_bundle( 
  "@CMAKE_INSTALL_PREFIX@/@target@.app" 
  "${PluginList}" 
  "Plugins"
)

