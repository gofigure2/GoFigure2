PROJECT( QGOFIGURE )

CMAKE_MINIMUM_REQUIRED(VERSION 2.4)

IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(VERSION 2.4)
  CMAKE_POLICY(SET CMP0005 OLD)
  CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

# On Visual Studio 8 MS deprecated C. This removes all 1.276E1265 security
# warnings. Copied from ITK CMakeLists.
IF(WIN32)
  IF(NOT BORLAND)
    IF(NOT CYGWIN)
      IF(NOT MINGW)
          ADD_DEFINITIONS(
            -D_CRT_FAR_MAPPINGS_NO_DEPRECATE
            -D_CRT_IS_WCTYPE_NO_DEPRECATE
            -D_CRT_MANAGED_FP_NO_DEPRECATE
            -D_CRT_NONSTDC_NO_DEPRECATE
            -D_CRT_SECURE_NO_DEPRECATE
            -D_CRT_SECURE_NO_DEPRECATE_GLOBALS
            -D_CRT_SETERRORMODE_BEEP_SLEEP_NO_DEPRECATE
            -D_CRT_TIME_FUNCTIONS_NO_DEPRECATE
            -D_CRT_VCCLRIT_NO_DEPRECATE
            -D_SCL_SECURE_NO_DEPRECATE
            )
      ENDIF(NOT MINGW)
    ENDIF(NOT CYGWIN)
  ENDIF(NOT BORLAND)
ENDIF(WIN32)

############################
FIND_PACKAGE( VTK )
IF( VTK_FOUND )
  INCLUDE( ${VTK_USE_FILE} )

  IF( VTK_BUILD_SHARED_LIBS )
    SET(LIBS_STYLE "SHARED")
  ELSE( VTK_BUILD_SHARED_LIBS )
    SET(LIBS_STYLE "STATIC")
  ENDIF( VTK_BUILD_SHARED_LIBS )

  ############################
  FIND_PACKAGE( ITK )
  IF( ITK_FOUND )
    INCLUDE( ${ITK_USE_FILE} )
  ENDIF( ITK_FOUND )

  ############################
  # use what QVTK built with
  SET(QT_QMAKE_EXECUTABLE ${VTK_QT_QMAKE_EXECUTABLE} CACHE FILEPATH "")
  SET(QT_MOC_EXECUTABLE ${VTK_QT_MOC_EXECUTABLE} CACHE FILEPATH "")
  SET(QT_UIC_EXECUTABLE ${VTK_QT_UIC_EXECUTABLE} CACHE FILEPATH "")

  FIND_PACKAGE(Qt4 REQUIRED)

  IF(QT_USE_FILE)
    SET(QT_USE_QT3SUPPORT TRUE)
    INCLUDE(${QT_USE_FILE})
  ELSE(QT_USE_FILE)
    SET(QT_LIBRARIES   ${QT_QT_LIBRARY})
  ENDIF(QT_USE_FILE)

  SET( MEGAVTK2_SOURCE_DIR ${QGOFIGURE_SOURCE_DIR}/ExternalCode/MegaVTK )
  SET( MEGAVTK2_BINARY_DIR ${QGOFIGURE_BINARY_DIR}/ExternalCode/MegaVTK )

  IF(WIN32)
    IF(NOT BORLAND)
      IF(NOT CYGWIN)
        IF(NOT MINGW)
          IF(VTK_BUILD_SHARED_LIBS)
            ADD_DEFINITIONS( -DQMEGAVTKADDON2_EXPORTS )
            ADD_DEFINITIONS( -DvtkRenderingAddOn2_EXPORTS )
            SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH} )
          ENDIF(VTK_BUILD_SHARED_LIBS)
        ENDIF(NOT MINGW)
      ENDIF(NOT CYGWIN)
    ENDIF(NOT BORLAND)
  ENDIF(WIN32)

  LINK_DIRECTORIES( ${LIBRARY_OUTPUT_PATH} )

  INCLUDE_DIRECTORIES( BEFORE
    ${QT_INCLUDES}
    ${QGOFIGURE_SOURCE_DIR}
    ${QGOFIGURE_BINARY_DIR}
    ${QGOFIGURE_SOURCE_DIR}/qt
    ${QGOFIGURE_BINARY_DIR}/qt
    ${MEGAVTK2_SOURCE_DIR}
    ${MEGAVTK2_BINARY_DIR}
    ${MEGAVTK2_SOURCE_DIR}/vtkItk
    ${MEGAVTK2_BINARY_DIR}/vtkItk
    ${MEGAVTK2_SOURCE_DIR}/vtkRenderingAddOn
    ${MEGAVTK2_BINARY_DIR}/vtkRenderingAddOn
    ${QGOFIGURE_SOURCE_DIR}/ExternalCode/vtkLSM
    ${QGOFIGURE_SOURCE_DIR}/ExternalCode/itkQt )

  SUBDIRS( ExternalCode )
  SUBDIRS( Examples )
  SUBDIRS( qt )

  SET( QGOMAINWINDOW_HDRS QGoMainWindow.h
       ${QGOFIGURE_SOURCE_DIR}/ExternalCode/itkQt/itkQtAdaptor.h)
  SET( QGOMAINWINDOW_SRC QGoMainWindow.cxx )

  QT4_WRAP_UI( QGOMAINWINDOW_UI_HDRS go.ui )
  QT4_WRAP_CPP( QGOMAINWINDOW_MOC_SRC ${QGOMAINWINDOW_HDRS} )
  QT4_ADD_RESOURCES( QGOMAINWINDOW_QRC
    ${QGOFIGURE_SOURCE_DIR}/resources/axes.qrc)

## translation
#  SET( FILES_TO_TRANSLATE
#    ${QGOMAINWINDOW_HDRS} ${QGOMAINWINDOW_SRC} ${QGOMAINWINDOW_UI_HDRS} )
#
#  FILE( GLOB TRANSLATIONS_FILES Translations/*.ts )
#
#  OPTION(UPDATE_TRANSLATIONS "Update source translation Translations/*.ts files (WARNING: make clean will delete the source .ts files! Danger!)")
#  IF( UPDATE_TRANSLATIONS )
#    QT4_CREATE_TRANSLATION( QM_FILES ${FILES_TO_TRANSLATE}
#      ${TRANSLATIONS_FILES} )
#  ELSE( UPDATE_TRANSLATIONS )
#    QT4_CREATE_TRANSLATION( QM_FILES ${TRANSLATIONS_FILES} )
#  ENDIF( UPDATE_TRANSLATIONS )
#
#  ADD_CUSTOM_TARGET( TRANSLATIONS_TARGET DEPENDS ${QM_FILES} )
#
#  INSTALL(FILES ${QM_FILES} DESTINATION
#    ${CMAKE_INSTALL_PREFIX}/Translations)
##translation

  SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_SRC} PROPERTIES
                            OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )
  SET_SOURCE_FILES_PROPERTIES( ${QGOMAINWINDOW_MOC_SRC} PROPERTIES
                            OBJECT_DEPENDS "${QGOMAINWINDOW_UI_HDRS}" )

  ADD_EXECUTABLE( gofigure
    #MACOSX_BUNDLE
    gofigure.cxx
    ${QGOFIGURE_SOURCE_DIR}/ExternalCode/itkQt/itkQtProgressBar.cxx
    ${QGOFIGURE_SOURCE_DIR}/ExternalCode/vtkLSM/vtkLSMReader.cxx
    ${QGOMAINWINDOW_SRC}
    ${QGOMAINWINDOW_MOC_SRC}
    ${QGOMAINWINDOW_QRC} )

  TARGET_LINK_LIBRARIES( gofigure
    QMegaVTKAddOn2
    ${QT_LIBRARIES}
    QVTK
    ITKCommon
    ITKIO
    ITKBasicFilters
    ITKNumerics
    vtkImaging
    )

  ADD_TEST( gofigure_TEST ${CXX_TEST_PATH}/gofigure )
ENDIF( VTK_FOUND )


